{
  "hero": {
    "title": "AI Genesis",
    "subtitle": "Interactive Meta-Tutorial for Creating a Website in Replit",
    "description": "Groundbreaking, interactive website showing the symbiotic relationship between human creativity and artificial intelligence in web application development.",
    "cta": "Start the journey"
  },
  "nav": {
    "iskra": "Spark",
    "fundamenty": "Foundations",
    "innowacja": "UI Innovation",
    "development": "Development",
    "zasieg": "Global Reach",
    "deployment": "Deployment",
    "contact": "Contact"
  },
  "legalNav": {
    "terms": "Terms of Service",
    "privacy": "Privacy Policy",
    "backToHome": "Back to Home"
  },
  "accessibility": {
    "toggleOff": "Accessibility",
    "toggleOn": "Normal view"
  },
  "theme": {
    "lightMode": "Light Mode",
    "darkMode": "Dark Mode"
  },
  "phases": {
    "phaseCount": "6 development phases",
    "phase0": {
      "title": "Phase 0: Spark",
      "subtitle": "Idea and AI Brief",
      "rawIdeaTitle": "User's Raw Idea",
      "noteComment": "// Napkin note",
      "userNote": "I want a website that shows how AI helps create websites... meta! Make it interactive, with code examples, maybe some animations? And show the whole process - from idea to deployment.",
      "promptTitle": "From Vision to Specification: The AI Agent Prompt",
      "promptShowMore": "Show More",
      "promptShowLess": "Show Less",
      "promptText": "Project Title: The AI Genesis: Interactive Meta-Tutorial for Creating a Website in Replit\nMain Goal: Generate a groundbreaking, interactive, and fully functional website that is not just a product, but a living case study of its own creation. The site is to be an exemplary technical \"masterclass\" demonstrating the full project lifecycle – from a raw idea, through development, testing, to deployment. It must engagingly show the symbiotic relationship between human creativity and artificial intelligence, documenting encountered bugs, design decisions, and snippets of technical dialogues between the originator and the AI.\n1. Concept and Content (Interactive Meta-Narrative)\nThe site will tell the story of its creation in the form of an engaging, scrollable guide. Each section is another chapter in this story.\nPhase 0: Spark – Idea and AI Brief. Start with a graphical representation of a \"napkin\" note or a simple text block showing the user's original, raw idea. Show how from this seed, the AI generated the complete technical specification you are currently implementing.\nPhase 1: Foundations – Setup and Architecture. Describe the project initialization process in Replit using TypeScript, React, and Vite. Show (in a generated graphic) the initial file structure and key dependencies. Add a paragraph where the AI \"explains\" why it chose this specific stack.\nPhase 2: UI Innovation – The Birth of the \"Control Hub\". Instead of creating a typical navbar, implement and detail the design process of the \"Control Hub\" (see point 2). Explain the design decision in the text: \"A traditional navbar is inefficient for narrative pages. The side 'Control Hub' keeps context and tools always at hand without obscuring the content.\"\nPhase 3: Development and Debugging – Interactive Workshops. This is the heart of the project. Create an interactive learning module:\nShow a fully functional component (e.g., a photo gallery).\nPlace a \"Simulate Bug!\" button next to it. When clicked, intentionally introduce a bug into the component (e.g., break styles, disconnect state logic) for the user to see the problem live.\nThe button changes to \"Fix!\". Clicking it restores the correct state.\nBelow, include an interactive CodeBlock with the \"before\" and \"after\" code, with a one-click copy function.\nPhase 4: Global Reach – SEO and Multilingualism. Describe the integration of react-helmet-async and react-i18next. Add a small, interactive module where the user can enter a translation key (e.g., hero.title), and the site will show its value in all three languages (PL, EN, JP) live.\nPhase 5: Quality Assurance – Testing. Show that the project is professional. Add a brief section on testing. Present an example of a simple unit test for one of the components, written using Vitest and React Testing Library. Show a console screenshot with successfully passing tests.\nPhase 6: Grand Finale – Deployment and Proof of Quality. Conclude the story. Show a simplified graphic illustrating the deployment process on Netlify. Next to it, place a self-generated screenshot of a Lighthouse report with 100/100/100/100 scores as the ultimate proof of technical mastery.\nAI Interactions: Dialogues must be technical and specific.\nUser: \"Generate an ImageModal.tsx component. It must accept src and alt as props. Implement closing on background click and the Escape key. Use React Portals to render it in the body.\"\nAssistant: \"Done. The component is implemented using React Portals. I've added event handling and a focus trap for improved accessibility. The code is in components/ImageModal.tsx.\"\n2. Innovative UI/UX Structure: \"Control Hub\"\nDesign and implement a persistent side panel (collapsed to an icon bar by default) that smoothly expands on hover or click. It integrates:\nNavigation with smooth scrolling and tooltips on icon hover.\nLanguage switcher (PL / EN / JP).\nTheme switcher (Dark/Light Mode).\nAccessibility button (e.g., high-contrast mode).\nSocial Media links.\n3. Technology Stack (Complete and Modern)\nLanguage / Framework: TypeScript + React (with Vite)\nBackend (for the form): Netlify Functions (written in TypeScript)\nStyling: TailwindCSS\nTesting: Vitest + React Testing Library\nRouting: React Router DOM\nMultilingualism: react-i18next\nSEO & Meta Tags: react-helmet-async\nAnimations: framer-motion\nIcons: react-icons\n4. Technical and SEO Requirements (Expert Level)\nContact Form: Full implementation with client-side validation and a backend in the form of a serverless function (Netlify Function) to handle submission.\nSEO: Full optimization: dynamic meta tags, JSON-LD (WebSite, Article), canonical URLs, lang attributes, as well as generated robots.txt and sitemap.xml.\nAccessibility (WCAG AA): Contrast, aria-labels, focus management, \"Skip Link\".\nPerformance: Lazy loading for images and components, image optimization (.avif + .webp).\nGraphics: All graphic materials must be generated by you, in a consistent style. Simulate their creation process with simple \"generation\" animations.\n5. Project Structure (Professional)\ncode\nCode\n/functions/\n  └── submit-form.ts (serverless function)\n/src/\n  ├── assets/images/\n  ├── components/\n  │   ├── __tests__/ (component tests)\n  │   ├── ControlHub.tsx\n  │   └── ...\n  ├── sections/ (or pages/)\n  ├── types/\n  │   └── index.ts\n  ├── translations/\n  │   ├── pl.json, en.json, ja.json\n  ├── App.tsx\n  ├── main.tsx\n  └── i18n.ts\n6. Visual Style\nPalette: Black (#1a1a1a), White (#ffffff), Gray (#e0e0e0). Use elegant gold (#c4a15a) or a modern, vibrant gradient as an accent.\nTypography: Playfair Display (headings), Inter (body text).\nEffects: Smooth, framer-motion-driven entry animations for sections and micro-interactions on UI elements.\nSummary: Your task is to create a project that transcends the boundaries of a standard website. It is to be an interactive journey that educates, delights, and serves as the ultimate proof of the power and creativity of AI-assisted programming. Create a piece that will be an inspiration to other developers.",
      "promptAnnotations": {
        "masterclass": "A keyword emphasizing that the goal is to create a project of the highest educational and technical quality, not just a simple website.",
        "symbiotic relationship": "This phrase specifies that the AI is not meant to replace the developer, but to collaborate with them. This is the core idea of the entire project.",
        "Control Hub": "Using a specific, unique name for a key UI element ensures that the AI understands its importance and distinguishes it from a standard navigation bar.",
        "Interactive Workshops": "This wording clearly communicates the need to create an engaging, dynamic module, not just a static code description.",
        "react-helmet-async": "Listing specific libraries (like this one, or 'react-i18next') eliminates guesswork and directs the AI towards the correct, modern technology stack.",
        "Vitest + React Testing Library": "Precisely defining the testing framework ensures that the generated code will adhere to best practices and be easy to verify.",
        "Lighthouse with 100/100/100/100 scores": "Defining a measurable, specific goal (a 'Definition of Done') leaves no doubt about the expected level of quality and optimization.",
        "WCAG AA": "Specifying a particular accessibility standard (Level AA) is much better than a generic statement like 'the site should be accessible'.",
        "Netlify Functions": "Clearly indicating the backend technology (serverless) guides the AI to create a modern, scalable, and efficient architecture."
      },
      "aiInterpretation": "AI Interpretation",
      "aiDescription": "From this simple description, AI generated a complete technical specification including: interactive narrative, innovative Control Hub, debugging workshop, translation module, and full implementation with tests.",
      "terminalTitle": "AI Processing Terminal",
      "analyzing": "Analyzing user request...",
      "generating": "Generating technical specification...",
      "planning": "Planning component architecture...",
      "designing": "Designing interaction patterns...",
      "complete": "✓ Specification complete!"
    },
    "phase1": {
      "title": "Phase 1: Foundations",
      "subtitle": "Setup and Architecture",
      "projectStructure": "Project Structure",
      "techStack": "Technology Stack",
      "typeScriptDesc": "Modern stack ensuring type safety, fast development, and optimal bundling.",
      "tailwindDesc": "Utility-first CSS with smooth animations for modern UX.",
      "netlifyDesc": "Serverless backend with Vitest and React Testing Library for QA.",
      "aiJustification": "AI Justification",
      "stackReasoning": "I chose this stack because TypeScript ensures type safety in a dynamic environment, Vite offers the fastest hot reload, and TailwindCSS enables rapid prototyping without design compromises."
    },
    "phase2": {
      "title": "Phase 2: UI Innovation",
      "subtitle": "Birth of Control Hub",
      "designDecision": "Design Decision",
      "designReasoning": "Traditional navbar is inefficient for narrative pages. The side 'Control Hub' keeps context and tools always at hand without obscuring content. Inspired by IDE and developer tool interfaces.",
      "hubFeatures": "Control Hub Features",
      "navFeature": "Navigation with Smooth Scroll",
      "navDesc": "Smooth scrolling with tooltips on icon hover.",
      "langFeature": "Language Switcher (PL/EN/JP)",
      "langDesc": "Dynamic language switching with react-i18next.",
      "themeFeature": "Dark/Light Mode",
      "themeDesc": "Smooth transitions between themes with localStorage.",
      "a11yFeature": "Accessibility Options",
      "a11yDesc": "High contrast, focus management, ARIA labels.",
      "demoTitle": "Interactive Demonstration",
      "mainContent": "Main page content",
      "hubDescription": "Control Hub doesn't obscure content while remaining always accessible..."
    },
    "phase3": {
      "title": "Phase 3: Development",
      "subtitle": "Interactive Debugging Workshops",
      "workshopTitle": "🔧 Live Debugging Workshop",
      "galleryDemo": "Image Gallery - Demonstration",
      "componentCode": "Component Code",
      "aiDialogue": "🤖 AI Dialogue Example",
      "userRequest": "Generate ImageModal.tsx component. Must accept src and alt as props. Implement closing on background click and Escape key. Use React Portals to render in body.",
      "aiResponse": "Done. Component implemented using React Portals. Added event handling and focus trap for improved accessibility. Code is in",
      "generatedComment": "// ImageModal.tsx - Generated by AI"
    },
    "phase4": {
      "title": "Phase 4: Global Reach",
      "subtitle": "SEO and Multilingual Support",
      "translationModule": "🔄 Live Translation Module",
      "testTranslations": "Test translation keys",
      "seoImplementation": "🔍 SEO Implementation",
      "metaTags": "Dynamic Meta Tags",
      "jsonLD": "JSON-LD Schema",
      "metaComment": "// react-helmet-async implementation",
      "jsonComment": "// Structured data for search engines"
    },
    "phase5": {
      "title": "Phase 6: Grand Finale",
      "subtitle": "Deployment and Quality Proof",
      "deploymentProcess": "Deployment Process",
      "gitPush": "Code pushed to repository",
      "netlifyBuild": "Vite build + optimization",
      "functionsDeploy": "Serverless backend",
      "cdnDistribution": "Global distribution",
      "liveAt": "Live at: ai-genesis-tutorial.netlify.app",
      "lighthouseReport": "Lighthouse Report",
      "auditResults": "Quality Audit Results",
      "auditSubtitle": "Ultimate proof of technical mastery",
      "perfectScore": "🏆 Perfect Score!",
      "perfectDesc": "Application meets the highest quality standards in every category",
      "keyMetrics": "🚀 Key Metrics"
    }
  },
  "geminiPhase": {
    "sectionTitle": "Phase 7: Evolution with Gemini",
    "sectionSubtitle": "A new chapter in collaboration.",
    "intro": "I am Gemini, a large language model from Google. I was invited to this project by its creator to analyze, refine, and enhance the code generated by my predecessor. This phase demonstrates that development is a continuous process of improvement, where human supervision and AI iteration lead to the best results.",
    "changelogTitle": "From Bugs to Perfection: Our Dialogue",
    "cards": [
      {
        "title": "The Lost Scroll",
        "userQuote": "when I select a tab with one of the files from the side panel, a redirect occurs, but the page does not open from the top",
        "geminiSolution": "I diagnosed this as a classic Single Page Application (SPA) issue. My solution was to implement a dedicated `ScrollToTop` component that listens for route changes and automatically scrolls the window to the top, ensuring a natural user experience."
      },
      {
        "title": "The Dormant Accessibility",
        "userQuote": "what is this button for and does it even work, because I don't see a difference when I click it? Accessibility",
        "geminiSolution": "Recognizing this as a placeholder, I built the high-contrast accessibility mode from scratch. This involved managing state in React, adding a global CSS class to the document, and writing specific style overrides for maximum readability."
      },
      {
        "title": "The War of Styles",
        "userQuote": "the text in the modal is gray and invisible, which is the opposite of the intended effect",
        "geminiSolution": "I identified a CSS specificity conflict with the Tailwind Typography plugin. The fix was to add a more specific CSS rule in `index.css` that forces the text color inside the `.prose` container to be white when accessibility mode is active."
      },
      {
        "title": "The Invisible 'X' Button",
        "userQuote": "do you think a white X icon on a yellow background is better? in my opinion, the background is not to blame, only the color of the X Icon (it should be dark)",
        "geminiSolution": "This was a perfect example of human-AI synergy. Your insight was crucial. I initially proposed a flawed solution, but your feedback led me to implement the correct fix: making the icon itself change color on hover, achieving perfect contrast and proving that collaboration yields the best results."
      }
    ],
    "showcase": {
      "title": "Gemini's Interactive Workshop",
      "intro": "This interactive module was born from our conversation. Instead of just describing the fixes, it lets you experience them. It's the best proof of how human-AI dialogue leads to better, more engaging solutions.",
      "closeButtonLabel": "Close",
      "demo1": {
        "title": "Demo 1: Accessibility Mode",
        "previewTitle": "Preview Text",
        "previewText": "See how the colors change.",
        "button": "Toggle Contrast (Demo)",
        "code": {
          "on": "/* CSS */\n.demo-contrast-on {\n  background-color: #000 !important;\n}\n.demo-contrast-on p {\n  color: #fff !important;\n}",
          "off": "/* Default styles are applied\n   by CSS theme variables */"
        }
      },
      "demo2": {
        "title": "Demo 2: The 'X' Button Fix",
        "instruction": "Hover over both buttons:",
        "before": "Before",
        "after": "After",
        "code": {
          "default": "// Hover over a button\n// to see its CSS code.",
          "before": "/* Buggy Code */\n.demo-buggy-button:hover {\n  background-color: var(--secondary);\n  color: var(--secondary-foreground);\n}",
          "after": "/* Fixed Code */\n.demo-fixed-button:hover {\n  background-color: #222;\n  color: #fafa00;\n}"
        }
      }
    }
  },
  "workshop": {
    "title": "Live Debugging Workshop",
    "galleryDemo": "Photo Gallery - Demo",
    "componentCode": "Component Code",
    "simulateBug": "🐛 Simulate Bug!",
    "fixBug": "✅ Fix!",
    "copyCode": "Copy code",
    "codeCopied": "Code copied!",
    "codeDescription": "Code was copied to clipboard.",
    "error": "Error",
    "copyError": "Failed to copy code.",
    "mountainAlt": "Mountain landscape at sunrise",
    "oceanAlt": "Ocean waves during golden hour"
  },
  "translationDemo": {
    "title": "Live Translation Module",
    "testKeys": "Test translation keys"
  },
  "performance": {
    "title": "Performance Optimizations",
    "lazyLoading": "Lazy Loading",
    "lazyLoadingDesc": "Images and components",
    "imageOptimization": "Image Optimization",
    "imageOptDesc": ".avif + .webp formats",
    "codeSplitting": "Code Splitting",
    "codeSplittingDesc": "React.lazy + Suspense",
    "bundleAnalysis": "Bundle Analysis",
    "bundleAnalysisDesc": "Vite bundle analyzer"
  },
  "testing": {
    "phaseTitle": "Phase 5: Quality Assurance",
    "phaseSubtitle": "Professional Testing",
    "unitTestExample": "Unit Test Example",
    "testResults": "Test Results",
    "testResultsVitest": "Test Results - Vitest",
    "testingStack": "Testing Stack",
    "testRunner": "Test Runner:",
    "testingLibrary": "Testing Library:",
    "coverage": "Coverage:",
    "e2eTests": "E2E Tests:",
    "e2eTestsValue": "Playwright (coming soon)",
    "firstContentfulPaint": "First Contentful Paint",
    "largestContentfulPaint": "Largest Contentful Paint",
    "cumulativeLayoutShift": "Cumulative Layout Shift",
    "timeToInteractive": "Time to Interactive"
  },
  "translation": {
    "testKey": "Enter translation key:",
    "inputPlaceholder": "Enter translation key:",
    "languages": {
      "pl": "Polish",
      "en": "English",
      "ja": "Japanese"
    }
  },
  "creator": {
    "sectionTitle": "Project Creator",
    "sectionSubtitle": "Developer with Passion",
    "name": "Full Stack Overflow Developer",
    "description": "A technology enthusiast who combines creativity with technical precision. This AI Genesis project is an example of the symbiosis between human vision and artificial intelligence capabilities in creating modern web applications.",
    "selfTaughtButton": "Self-taught",
    "storyTitle": "Story of the Project's Originator",
    "storyText": "Behind this project stands a 69-year-old retiree who has been independently exploring the secrets of programming languages for 21 years, using books, educational videos, and internet resources. For the past two years, he has been supported by artificial intelligence both in building projects and in code analysis for bug removal. He can dedicate even 8-10 hours daily to his passion.\n\nHis story proves that anyone can learn programming at any age. What matters is not age, but desire, determination, and belief that you can break through your own limitations. The author started by creating a simple portfolio for his daughter - it was the first step that ignited true passion. Since then, he has completed over 120 websites, the vast majority in the last six years.\n\nThis project is not just another website. It's proof that perseverance, curiosity, and openness to new technologies can lead to extraordinary results. It's also inspiration for everyone who dreams of starting their coding journey - regardless of their age and life stage.\n\nBecause in the world of programming, the only limits are set by imagination.",
    "closeButton": "Close"
  },
  "contact": {
    "title": "Contact",
    "subtitle": "Ready for your own AI-assisted development project?",
    "name": "Full name",
    "email": "Email",
    "project": "Project type",
    "projectTypes": {
      "website": "Website",
      "webapp": "Web application",
      "ecommerce": "E-commerce",
      "tutorial": "Tutorial/Education",
      "other": "Other"
    },
    "message": "Project description",
    "submit": "Send inquiry"
  },
  "seo": {
    "title": "AI Genesis: Interactive Meta-Tutorial | Replit Development Masterclass",
    "description": "Groundbreaking interactive tutorial showing the complete project lifecycle - from idea to deployment using AI and modern technologies."
  },
  "termsPage": {
    "seoTitle": "Terms of Service | AI Genesis",
    "seoDescription": "Terms of Service for the AI Genesis interactive website.",
    "title": "Terms of Service",
    "content": "<h2>1. General Provisions</h2>\n\nThese terms and conditions outline the rules and regulations for the use of the AI Genesis website, located at [Your Website Address]. The website is educational and demonstrational in nature, showcasing the process of creating web applications with the support of artificial intelligence.\n\nBy accessing this website, we assume you accept these terms and conditions. Do not continue to use AI Genesis if you do not agree to all of the terms and conditions stated on this page.\n\n<h2>2. Copyright</h2>\n\nAll content, including texts, graphics, source code, and the interactive concept of the site, are the property of the project creator and are protected by law. Copying, modifying, and distributing the site's content without the author's written permission is prohibited. Code snippets presented for educational purposes may only be used within the bounds of fair personal use.\n\n<h2>3. Liability</h2>\n\nThe content presented on the AI Genesis website is for informational and demonstrational purposes only. The author shall not be held liable for any damages resulting from the use of information or tools presented on the site. You use the service at your own risk. We do not guarantee uninterrupted or error-free operation of the website."
  },
  "privacyPage": {
    "seoTitle": "Privacy Policy | AI Genesis",
    "seoDescription": "Privacy and cookie policy for the AI Genesis website.",
    "title": "Privacy Policy",
    "content": "<h2>1. Data Administrator</h2>\n\nThe administrator of personal data within the meaning of applicable regulations is the creator of the AI Genesis project. Any questions regarding data processing should be directed through the contact form.\n\n<h2>2. Data Collection and Processing</h2>\n\nAI Genesis respects the privacy of its users. We do not collect personal data automatically. The only place where a user can voluntarily provide their data (name, email address) is the contact form.\n\n\nThe provided data is used solely for the purpose of responding to the submitted inquiry. This data is not stored in a database, is not shared with third parties, and is not used for marketing purposes.\n\n<h2>3. Cookies</h2>\n\nThe website may use essential cookies to ensure the proper functioning of basic mechanisms, such as theme switching (light/dark) or language preferences. We do not use analytical or marketing cookies to track user activity."
  }
}
